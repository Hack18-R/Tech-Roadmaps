Types of Problems in Programming / Software World
===================================================

1. Basic Programming & Logic
----------------------------
- Simple math problems → Fibonacci, Prime check, Factorial
- String manipulation → Reverse string, Palindrome, Anagrams
- Pattern printing → Stars, numbers, pyramids
Goal: Build coding logic + syntax fluency.

2. Data Structures Problems
----------------------------
These are the heart of DSA. Every big problem is built on these.
- Arrays → searching, subarrays, rotations, prefix/suffix sums
- Strings → substring search, pattern matching, text processing
- Linked List → reversal, cycle detection, merging
- Stack/Queue → parentheses, next greater element, sliding window
- Hashing → frequency counts, subarray sums, duplicates
- Trees → traversal, lowest common ancestor, height/balance checks
- Graphs → BFS, DFS, shortest path, connected components
- Heap/Priority Queue → top-K elements, scheduling problems

3. Algorithms-Based Problems
-----------------------------
Focus on time & space efficiency:
- Searching (binary search, ternary search)
- Sorting (quick, merge, counting sort)
- Greedy (interval scheduling, Huffman coding)
- Divide & Conquer (merge sort, binary search variations)
- Dynamic Programming (DP) → knapsack, LIS, coin change, DP on strings
- Graph Algorithms → Dijkstra, Bellman-Ford, Floyd-Warshall, MST

4. Competitive Programming / Problem Solving
---------------------------------------------
- Number theory (modular arithmetic, prime factorization)
- Bit manipulation problems
- Sliding window & two-pointer techniques
- Advanced DP (digit DP, DP on trees)
- Geometry problems

5. Software Engineering / Real-World Problems
----------------------------------------------
- Database Queries → SQL optimization, joins, transactions
- Concurrency & Multithreading → handling multiple users, thread-safety
- System Design → designing scalable apps (Instagram, Uber, YouTube)
- API Design → designing REST APIs, error handling
- Cloud & DevOps Problems → deployment, scalability, fault tolerance
- Debugging & Code Quality → finding bugs, writing clean maintainable code

6. Interview-Oriented Problems
-------------------------------
Most coding interviews focus on:
- Arrays, Strings, Hashing
- Linked List, Stacks, Queues
- Trees & Graphs
- Dynamic Programming
- System Design (for senior roles)
Companies like Google, Amazon, Microsoft test problem-solving + design skills.

7. Industry/Domain-Specific Problems
-------------------------------------
Different industries deal with specific types of problems:
- Finance/Banking → fraud detection, high-frequency trading algorithms
- E-commerce → recommendation engines, inventory optimization
- Social Media → newsfeed ranking, graph algorithms (friends of friends)
- AI/ML → data preprocessing, model optimization
- Game Development → pathfinding (A* algorithm), collision detection

Big Picture
============
Categories of problems in the software world:
1. Basic Logic (beginners)
2. DSA Problems (interviews/CP)
3. Algorithmic Problems (optimization-heavy)
4. Competitive Programming (hard math + optimization)
5. Software Engineering Problems (real-world systems)
6. Interview Problems (standard patterns)
7. Domain-Specific Problems (finance, ML, gaming, etc.)

Career Path Guidance
=====================
- For Coding Interviews → focus on (Basic Logic → DSA → Algorithms → Interview Problems)
- For Real-World Software Engineering → focus on (Java + OOP + System Design + Databases + Scalability problems)
