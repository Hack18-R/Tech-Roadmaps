
### 📘 **1. Learn Concepts Effectively**
- Teach me [concept]. Include what it is, why it matters, real-life use cases, and example code.  
- Explain [concept] in a structured way: definition, how it works, syntax, one real-world example, and how it’s used in backend.

---

### 💻 **2. Hands-On Practice & Problem Solving**
- Give me hands-on exercises and real-world backend tasks to practice [concept], from basic to advanced level.  
- Give me coding problems on [topic] with Java solutions and explanations, increasing in difficulty.

---

### 🚧 **3. Debugging & Fixing Issues**
- Here’s my code and the issue I’m facing with [concept]. Help me debug it and explain what went wrong and how to fix it.  
- I’m stuck on this bug or logic in [language/framework]. Guide me step-by-step to understand and solve it.

---

### 🏗️ **4. Building Projects & Structure**
- Suggest a full backend project using [technology]. Guide me step-by-step to build it — including folder structure, APIs, database schema, tools, and best practices.  
- Give me a beginner or intermediate backend project idea using [concept/tech], and explain how to implement it from scratch.

---

### 🧠 **5. Smart Learning Plan & Roadmap Strategy**
- Create a weekly learning plan to master [topic or section of roadmap] using the 80/20 rule (20% theory, 80% hands-on).  
- Break down [topic] into learning phases and give me the most effective order to study and practice them.

