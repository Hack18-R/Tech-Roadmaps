
### âœ… **DSA 15 Patterns Cheat Sheet**

#### 1. **Sliding Window**
- Use when dealing with **subarrays**, **strings**, or **windows of elements**.
- Common problems: Maximum sum of subarray, longest substring with K distinct characters.

#### 2. **Two Pointers**
- Used on **sorted arrays/strings** to search pairs or move inward from both ends.
- Common problems: Two sum, isPalindrome, remove duplicates.

#### 3. **Fast and Slow Pointers (Tortoise & Hare)**
- Used to **detect cycles** or find **middle elements** in linked lists.
- Common problems: Detect cycle in linked list, palindrome linked list.

#### 4. **Merge Intervals**
- Used for **interval merging**, **scheduling**, or **range overlaps**.
- Common problems: Merge intervals, insert interval, meeting rooms.

#### 5. **Cyclic Sort**
- Used for **arrays with numbers from 1 to N** (find missing, duplicate).
- Common problems: Missing number, find duplicate, first K missing positives.

#### 6. **In-Place Reversal**
- Used to **reverse arrays, strings, or linked lists** in-place.
- Common problems: Reverse linked list, reverse string, reverse subarray.

#### 7. **Breadth-First Search (BFS)**
- Used for **level-order traversal** in trees/graphs or **shortest path** in unweighted graphs.
- Common problems: Binary Tree level order traversal, shortest path in grid.

#### 8. **Depth-First Search (DFS)**
- Used to **explore all paths**, mostly recursive.
- Common problems: All paths in binary tree, number of islands.

#### 9. **Backtracking**
- Used to **try all combinations/choices** (recursive + undo).
- Common problems: N-Queens, Sudoku, Subsets, Word Search.

#### 10. **Dynamic Programming (DP)**
- Used when there are **overlapping subproblems** and **optimal substructure**.
- Common problems: Knapsack, Fibonacci, LCS, Coin Change.

#### 11. **Greedy**
- Used when **local choices** lead to **optimal global solutions**.
- Common problems: Activity selection, fractional knapsack, Huffman coding.

#### 12. **Topological Sort**
- Used for **ordering tasks** in a **DAG (Directed Acyclic Graph)**.
- Common problems: Course schedule, task scheduler.

#### 13. **Union Find / Disjoint Set (DSU)**
- Used to **detect cycles**, **group nodes**, or **connected components**.
- Common problems: Graph connectivity, number of islands (DSU approach).

#### 14. **Bit Manipulation**
- Used for **XOR tricks**, **bit counting**, or **binary logic**.
- Common problems: Single number, power of two, counting bits.

#### 15. **Trie (Prefix Tree)**
- Used for **fast prefix lookup**, **autocomplete**, or **dictionary matching**.
- Common problems: Implement trie, word search II, longest common prefix.

